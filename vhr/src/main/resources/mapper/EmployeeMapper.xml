<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chouxiaozi.vhr.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.chouxiaozi.vhr.model.Employee">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="gender" property="gender" jdbcType="CHAR"/>
        <result column="birthday" property="birthday" jdbcType="DATE"/>
        <result column="idCard" property="idCard" jdbcType="CHAR"/>
        <result column="wedlock" property="wedlock" jdbcType="CHAR"/>
        <result column="nationId" property="nationId" jdbcType="INTEGER"/>
        <result column="nativePlace" property="nativePlace" jdbcType="VARCHAR"/>
        <result column="politicId" property="politicId" jdbcType="INTEGER"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="departmentId" property="departmentId" jdbcType="INTEGER"/>
        <result column="jobLevelId" property="jobLevelId" jdbcType="INTEGER"/>
        <result column="posId" property="posId" jdbcType="INTEGER"/>
        <result column="engageForm" property="engageForm" jdbcType="VARCHAR"/>
        <result column="tiptopDegree" property="tiptopDegree" jdbcType="CHAR"/>
        <result column="specialty" property="specialty" jdbcType="VARCHAR"/>
        <result column="school" property="school" jdbcType="VARCHAR"/>
        <result column="beginDate" property="beginDate" jdbcType="DATE"/>
        <result column="workState" property="workState" jdbcType="CHAR"/>
        <result column="workID" property="workId" jdbcType="CHAR"/>
        <result column="contractTerm" property="contractTerm" jdbcType="DOUBLE"/>
        <result column="conversionTime" property="conversionTime" jdbcType="DATE"/>
        <result column="notWorkDate" property="notworkDate" jdbcType="DATE"/>
        <result column="beginContract" property="beginContract" jdbcType="DATE"/>
        <result column="endContract" property="endContract" jdbcType="DATE"/>
        <result column="workAge" property="workAge" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, gender, birthday, idCard, wedlock, nationId, nativePlace, politicId, email, 
    phone, address, departmentId, jobLevelId, posId, engageForm, tiptopDegree, specialty, 
    school, beginDate, workState, workID, contractTerm, conversionTime, notWorkDate, 
    beginContract, endContract, workAge
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.chouxiaozi.vhr.model.EmployeeExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from employee
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.chouxiaozi.vhr.model.EmployeeExample">
        delete from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.chouxiaozi.vhr.model.Employee">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into employee (name, gender, birthday,
        idCard, wedlock, nationId,
        nativePlace, politicId, email,
        phone, address, departmentId,
        jobLevelId, posId, engageForm,
        tiptopDegree, specialty, school,
        beginDate, workState, workID,
        contractTerm, conversionTime, notWorkDate,
        beginContract, endContract, workAge
        )
        values (#{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{birthday,jdbcType=DATE},
        #{idCard,jdbcType=CHAR}, #{wedlock,jdbcType=CHAR}, #{nationId,jdbcType=INTEGER},
        #{nativePlace,jdbcType=VARCHAR}, #{politicId,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR},
        #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER},
        #{jobLevelId,jdbcType=INTEGER}, #{posId,jdbcType=INTEGER}, #{engageForm,jdbcType=VARCHAR},
        #{tiptopDegree,jdbcType=CHAR}, #{specialty,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR},
        #{beginDate,jdbcType=DATE}, #{workState,jdbcType=CHAR}, #{workId,jdbcType=CHAR},
        #{contractTerm,jdbcType=DOUBLE}, #{conversionTime,jdbcType=DATE}, #{notworkDate,jdbcType=DATE},
        #{beginContract,jdbcType=DATE}, #{endContract,jdbcType=DATE}, #{workAge,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.chouxiaozi.vhr.model.Employee">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">
                name,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="idCard != null">
                idCard,
            </if>
            <if test="wedlock != null">
                wedlock,
            </if>
            <if test="nationId != null">
                nationId,
            </if>
            <if test="nativePlace != null">
                nativePlace,
            </if>
            <if test="politicId != null">
                politicId,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="departmentId != null">
                departmentId,
            </if>
            <if test="jobLevelId != null">
                jobLevelId,
            </if>
            <if test="posId != null">
                posId,
            </if>
            <if test="engageForm != null">
                engageForm,
            </if>
            <if test="tiptopDegree != null">
                tiptopDegree,
            </if>
            <if test="specialty != null">
                specialty,
            </if>
            <if test="school != null">
                school,
            </if>
            <if test="beginDate != null">
                beginDate,
            </if>
            <if test="workState != null">
                workState,
            </if>
            <if test="workId != null">
                workID,
            </if>
            <if test="contractTerm != null">
                contractTerm,
            </if>
            <if test="conversionTime != null">
                conversionTime,
            </if>
            <if test="notworkDate != null">
                notWorkDate,
            </if>
            <if test="beginContract != null">
                beginContract,
            </if>
            <if test="endContract != null">
                endContract,
            </if>
            <if test="workAge != null">
                workAge,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                #{idCard,jdbcType=CHAR},
            </if>
            <if test="wedlock != null">
                #{wedlock,jdbcType=CHAR},
            </if>
            <if test="nationId != null">
                #{nationId,jdbcType=INTEGER},
            </if>
            <if test="nativePlace != null">
                #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="politicId != null">
                #{politicId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="jobLevelId != null">
                #{jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="posId != null">
                #{posId,jdbcType=INTEGER},
            </if>
            <if test="engageForm != null">
                #{engageForm,jdbcType=VARCHAR},
            </if>
            <if test="tiptopDegree != null">
                #{tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="specialty != null">
                #{specialty,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                #{school,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                #{beginDate,jdbcType=DATE},
            </if>
            <if test="workState != null">
                #{workState,jdbcType=CHAR},
            </if>
            <if test="workId != null">
                #{workId,jdbcType=CHAR},
            </if>
            <if test="contractTerm != null">
                #{contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="conversionTime != null">
                #{conversionTime,jdbcType=DATE},
            </if>
            <if test="notworkDate != null">
                #{notworkDate,jdbcType=DATE},
            </if>
            <if test="beginContract != null">
                #{beginContract,jdbcType=DATE},
            </if>
            <if test="endContract != null">
                #{endContract,jdbcType=DATE},
            </if>
            <if test="workAge != null">
                #{workAge,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.chouxiaozi.vhr.model.EmployeeExample" resultType="java.lang.Integer">
        select count(*) from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update employee
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.gender != null">
                gender = #{record.gender,jdbcType=CHAR},
            </if>
            <if test="record.birthday != null">
                birthday = #{record.birthday,jdbcType=DATE},
            </if>
            <if test="record.idCard != null">
                idCard = #{record.idCard,jdbcType=CHAR},
            </if>
            <if test="record.wedlock != null">
                wedlock = #{record.wedlock,jdbcType=CHAR},
            </if>
            <if test="record.nationId != null">
                nationId = #{record.nationId,jdbcType=INTEGER},
            </if>
            <if test="record.nativePlace != null">
                nativePlace = #{record.nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="record.politicId != null">
                politicId = #{record.politicId,jdbcType=INTEGER},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.phone != null">
                phone = #{record.phone,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.departmentId != null">
                departmentId = #{record.departmentId,jdbcType=INTEGER},
            </if>
            <if test="record.jobLevelId != null">
                jobLevelId = #{record.jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="record.posId != null">
                posId = #{record.posId,jdbcType=INTEGER},
            </if>
            <if test="record.engageForm != null">
                engageForm = #{record.engageForm,jdbcType=VARCHAR},
            </if>
            <if test="record.tiptopDegree != null">
                tiptopDegree = #{record.tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="record.specialty != null">
                specialty = #{record.specialty,jdbcType=VARCHAR},
            </if>
            <if test="record.school != null">
                school = #{record.school,jdbcType=VARCHAR},
            </if>
            <if test="record.beginDate != null">
                beginDate = #{record.beginDate,jdbcType=DATE},
            </if>
            <if test="record.workState != null">
                workState = #{record.workState,jdbcType=CHAR},
            </if>
            <if test="record.workId != null">
                workID = #{record.workId,jdbcType=CHAR},
            </if>
            <if test="record.contractTerm != null">
                contractTerm = #{record.contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="record.conversionTime != null">
                conversionTime = #{record.conversionTime,jdbcType=DATE},
            </if>
            <if test="record.notworkDate != null">
                notWorkDate = #{record.notworkDate,jdbcType=DATE},
            </if>
            <if test="record.beginContract != null">
                beginContract = #{record.beginContract,jdbcType=DATE},
            </if>
            <if test="record.endContract != null">
                endContract = #{record.endContract,jdbcType=DATE},
            </if>
            <if test="record.workAge != null">
                workAge = #{record.workAge,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update employee
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        gender = #{record.gender,jdbcType=CHAR},
        birthday = #{record.birthday,jdbcType=DATE},
        idCard = #{record.idCard,jdbcType=CHAR},
        wedlock = #{record.wedlock,jdbcType=CHAR},
        nationId = #{record.nationId,jdbcType=INTEGER},
        nativePlace = #{record.nativePlace,jdbcType=VARCHAR},
        politicId = #{record.politicId,jdbcType=INTEGER},
        email = #{record.email,jdbcType=VARCHAR},
        phone = #{record.phone,jdbcType=VARCHAR},
        address = #{record.address,jdbcType=VARCHAR},
        departmentId = #{record.departmentId,jdbcType=INTEGER},
        jobLevelId = #{record.jobLevelId,jdbcType=INTEGER},
        posId = #{record.posId,jdbcType=INTEGER},
        engageForm = #{record.engageForm,jdbcType=VARCHAR},
        tiptopDegree = #{record.tiptopDegree,jdbcType=CHAR},
        specialty = #{record.specialty,jdbcType=VARCHAR},
        school = #{record.school,jdbcType=VARCHAR},
        beginDate = #{record.beginDate,jdbcType=DATE},
        workState = #{record.workState,jdbcType=CHAR},
        workID = #{record.workId,jdbcType=CHAR},
        contractTerm = #{record.contractTerm,jdbcType=DOUBLE},
        conversionTime = #{record.conversionTime,jdbcType=DATE},
        notWorkDate = #{record.notworkDate,jdbcType=DATE},
        beginContract = #{record.beginContract,jdbcType=DATE},
        endContract = #{record.endContract,jdbcType=DATE},
        workAge = #{record.workAge,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.chouxiaozi.vhr.model.Employee">
        update employee
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=CHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="idCard != null">
                idCard = #{idCard,jdbcType=CHAR},
            </if>
            <if test="wedlock != null">
                wedlock = #{wedlock,jdbcType=CHAR},
            </if>
            <if test="nationId != null">
                nationId = #{nationId,jdbcType=INTEGER},
            </if>
            <if test="nativePlace != null">
                nativePlace = #{nativePlace,jdbcType=VARCHAR},
            </if>
            <if test="politicId != null">
                politicId = #{politicId,jdbcType=INTEGER},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                departmentId = #{departmentId,jdbcType=INTEGER},
            </if>
            <if test="jobLevelId != null">
                jobLevelId = #{jobLevelId,jdbcType=INTEGER},
            </if>
            <if test="posId != null">
                posId = #{posId,jdbcType=INTEGER},
            </if>
            <if test="engageForm != null">
                engageForm = #{engageForm,jdbcType=VARCHAR},
            </if>
            <if test="tiptopDegree != null">
                tiptopDegree = #{tiptopDegree,jdbcType=CHAR},
            </if>
            <if test="specialty != null">
                specialty = #{specialty,jdbcType=VARCHAR},
            </if>
            <if test="school != null">
                school = #{school,jdbcType=VARCHAR},
            </if>
            <if test="beginDate != null">
                beginDate = #{beginDate,jdbcType=DATE},
            </if>
            <if test="workState != null">
                workState = #{workState,jdbcType=CHAR},
            </if>
            <if test="workId != null">
                workID = #{workId,jdbcType=CHAR},
            </if>
            <if test="contractTerm != null">
                contractTerm = #{contractTerm,jdbcType=DOUBLE},
            </if>
            <if test="conversionTime != null">
                conversionTime = #{conversionTime,jdbcType=DATE},
            </if>
            <if test="notworkDate != null">
                notWorkDate = #{notworkDate,jdbcType=DATE},
            </if>
            <if test="beginContract != null">
                beginContract = #{beginContract,jdbcType=DATE},
            </if>
            <if test="endContract != null">
                endContract = #{endContract,jdbcType=DATE},
            </if>
            <if test="workAge != null">
                workAge = #{workAge,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.chouxiaozi.vhr.model.Employee">
    update employee
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      idCard = #{idCard,jdbcType=CHAR},
      wedlock = #{wedlock,jdbcType=CHAR},
      nationId = #{nationId,jdbcType=INTEGER},
      nativePlace = #{nativePlace,jdbcType=VARCHAR},
      politicId = #{politicId,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      departmentId = #{departmentId,jdbcType=INTEGER},
      jobLevelId = #{jobLevelId,jdbcType=INTEGER},
      posId = #{posId,jdbcType=INTEGER},
      engageForm = #{engageForm,jdbcType=VARCHAR},
      tiptopDegree = #{tiptopDegree,jdbcType=CHAR},
      specialty = #{specialty,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      beginDate = #{beginDate,jdbcType=DATE},
      workState = #{workState,jdbcType=CHAR},
      workID = #{workId,jdbcType=CHAR},
      contractTerm = #{contractTerm,jdbcType=DOUBLE},
      conversionTime = #{conversionTime,jdbcType=DATE},
      notWorkDate = #{notworkDate,jdbcType=DATE},
      beginContract = #{beginContract,jdbcType=DATE},
      endContract = #{endContract,jdbcType=DATE},
      workAge = #{workAge,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="listMap" type="com.chouxiaozi.vhr.model.Employee" extends="BaseResultMap">
      <association property="nation" javaType="com.chouxiaozi.vhr.model.Nation">
          <id column="nationId" property="id"/>
          <result column="nationName" property="name"/>
      </association>
      <association property="politicsstatus" javaType="com.chouxiaozi.vhr.model.Politicsstatus">
          <id column="politicId" property="id"/>
          <result column="politicName" property="name"/>
      </association>
      <association property="department" javaType="com.chouxiaozi.vhr.model.Department">
          <id column="departmentId" property="id"/>
          <result column="departmentName" property="name"/>
      </association>
      <association property="jobLevel" javaType="com.chouxiaozi.vhr.model.JobLevel">
          <id column="jobLevelId" property="id"/>
          <result column="jobLevelName" property="name"/>
      </association>
      <association property="position" javaType="com.chouxiaozi.vhr.model.Position">
          <id column="posId" property="id"/>
          <result column="posName" property="name"/>
      </association>
  </resultMap>
    <!--自定义sql-->
    <select id="listEmployeesByPage" resultMap="listMap">
    SELECT
      e.*,
      nation.NAME nationName,
      ps.NAME politicName,
      dept.name departmentName,
      joblevel.name jobLevelName,
      position.name posName
    FROM
      employee e
      LEFT JOIN nation ON nation.id = e.nationId
      LEFT JOIN politicsstatus ps ON ps.id = e.politicId
      LEFT JOIN department dept on dept.id = e.departmentId
      LEFT JOIN joblevel on  joblevel.id = e.jobLevelId
      LEFT JOIN position on position.id = e.posId
      <if test="'' != keyword and null != keyword">
          <where>
              e.name like concat("%",#{keyword},"%")
          </where>
      </if>
      order by e.workID
      limit #{curPage},#{size}
  </select>
    <select id="getTotal" resultType="java.lang.Long">
      SELECT count(*) FROM employee e
      <if test="'' != keyword and null != keyword">
        <where>
            e.name like concat("%",#{keyword},"%")
        </where>
      </if>
    </select>
    <select id="getMaxWorkID" resultType="java.lang.Integer">
        SELECT
            MAX( workID )
        FROM
	    employee
    </select>
</mapper>